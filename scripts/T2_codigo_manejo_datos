# Cargamos las librerias necesarias para manipulacion de datos
library(dplyr)
library(tidyr)
library(scales)
library(readxl)

#Paths datasets utilizados

TenderosFU03_Publica <- read_dta("D:/universidad/2 semestre/haciendo economía/TenderosFU03_Publica.dta")
TerriData_Dim2_Sub3 <- read_excel("D:/universidad/2 semestre/haciendo economía/TerriData_Dim2_Sub3.xlsx")

#Elimina las etiquetas y deja los valores subyacentes como numéricos
TenderosFU03_Publica <- TenderosFU03_Publica %>%
  mutate(uso_internet = zap_labels(uso_internet))

# ---------------------
# TAREA 1: Promedio de uso de internet por municipio
# ---------------------

internet_munic <- TenderosFU03_Publica %>%
  group_by(Munic_Dept, Municipio) %>%  # Agrupa los datos por departamento y municipio
  summarize(internet = mean(uso_internet, na.rm = TRUE) * 100) %>%  # Calcula el promedio de uso de internet (en porcentaje)
  ungroup() %>%  # Desagrupa los datos
  rename(divipola = Munic_Dept)  # Renombra la columna de departamento a "divipola"

# ---------------------
# TAREA 2: Transformar datos de actividades y calcular uso de internet por tipo de actividad
# ---------------------

#Limpiamos y organizamos datos de tal forma que se puedan agrupar por actividad

ren_frame <- TenderosFU03_Publica %>%
  # Renombramos las columnas de actividades con nombres mas descriptivos
  rename(Tienda.1 = actG1, ComidaPreparada.2 = actG2, Peluqueria.3 = actG3, Ropa.4 = actG4,
         Otras.5 = actG5, Papeleria.6 = actG6, vidanocturna.7 = actG7, productosinventario.8 = actG8,
         salud.9 = actG9, servicios.10 = actG10, ferreteria.11 = actG11)

col_frame <- ren_frame %>%
  # Convertimos las columnas de actividades en dos columnas: "category" (nombre original) y "total" (valor 0/1)
  pivot_longer(cols = Tienda.1:ferreteria.11, names_to = "category", values_to = "total")

col_frame <- col_frame %>%
  # Separamos la columna "category" en dos: el nombre de la actividad y su numero
  separate(category, c("Actividad", "actG"))

#Frame con uso de internet por actividad economica

internet_act <- col_frame %>%
  group_by(actG, Actividad) %>%  # Agrupamos por numero de actividad y nombre
  summarize(internet = mean(uso_internet, na.rm = TRUE) * 100)  # Calculamos el promedio de uso de internet por actividad

# ---------------------
# TAREA 3: Promedio de uso de internet por municipio y actividad (solo donde la actividad esta presente)
# ---------------------

internet_act_munic <- col_frame %>%
  filter(total == 1) %>%  # Filtramos solo las filas donde la actividad está presente (valor 1)
  group_by(Munic_Dept, Municipio, actG, Actividad) %>%  # Agrupamos por municipio y tipo de actividad
  summarise(internet = percent(mean(uso_internet, na.rm = TRUE), accuracy = 0.1)) %>%  # Calculamos el promedio de uso de internet
  rename(divipola = Munic_Dept) %>%  # Renombramos la columna del departamento
  arrange(Municipio, actG)  # Ordenamos por municipio y tipo de actividad

# ---------------------
# TAREA 4: Procesar datos demograficos para obtener poblacion total por municipio
# ---------------------

#Limpieza de base datos

TerriData_Dim2_Sub3 <- TerriData_Dim2_Sub3[-1,]

TerriData_Dim2_Sub3 <- TerriData_Dim2_Sub3 %>%
  mutate(
    `Dato Numérico Limpio` = `Dato Numérico` %>%
      gsub("\\.", "", .) %>%           # Quitar puntos de miles
      gsub(",00$", "", .) %>%          # Quitar ",00" si está al final
      gsub(",", ".", .) %>%            # Si hay otros decimales, convertir a punto decimal
      as.numeric()                     # Convertir a número
  )

TerriData_Dim2_Sub3 <- TerriData_Dim2_Sub3 %>%
  mutate(divipola=as.numeric(`Código Entidad`))

#Frame con poblacion por codigo DANE

poblacion <- TerriData_Dim2_Sub3 %>%
  group_by(divipola) %>%
  filter(Año==2024, `Unidad de Medida`!= "Porcentaje (el valor está multiplicado por 100)")%>%
  summarise(poblacion = sum(`Dato Numérico Limpio`))


# ---------------------
# TAREA 5: Utilizamos merge() para unir las dos bases de datos principales
# ---------------------

final_dataframe <- merge(poblacion, internet_act_munic, by.x = "divipola", by.y = "divipola")

# --------------------
#Exportamos dataframes a excel para graficar con powerbi utilizando libreria writexl
# --------------------

library(writexl)

# Guardar como Excel cada dataframe

write_xlsx(internet_act_munic, "internet_act_munic.xlsx")
write_xlsx(final_dataframe, "final_dataframe.xlsx")
